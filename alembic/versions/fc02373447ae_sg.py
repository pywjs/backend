"""sg

Revision ID: fc02373447ae
Revises: af949932c723
Create Date: 2025-05-20 10:10:53.119120

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "fc02373447ae"
down_revision: Union[str, None] = "af949932c723"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "navigation",
        sa.Column(
            "is_deleted",
            sa.Boolean(),
            nullable=False,
            server_default=sa.sql.expression.false(),
        ),
    )
    op.add_column(
        "navigation", sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True)
    )
    op.add_column(
        "navigation",
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            nullable=False,
            server_default=sa.func.now(),
        ),
    )
    op.add_column(
        "navigation",
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            nullable=False,
            server_default=sa.func.now(),
        ),
    )
    op.drop_constraint("navigation_slug_key", "navigation", type_="unique")
    op.create_index(
        op.f("ix_navigation_is_deleted"), "navigation", ["is_deleted"], unique=False
    )
    op.create_index(op.f("ix_navigation_slug"), "navigation", ["slug"], unique=True)
    op.add_column(
        "navigationitem",
        sa.Column(
            "is_deleted",
            sa.Boolean(),
            nullable=False,
            server_default=sa.sql.expression.false(),
        ),
    )
    op.add_column(
        "navigationitem",
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
    )
    op.add_column(
        "navigationitem",
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            nullable=False,
            server_default=sa.func.now(),
        ),
    )
    op.add_column(
        "navigationitem",
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            nullable=False,
            server_default=sa.func.now(),
        ),
    )
    op.create_index(
        op.f("ix_navigationitem_is_deleted"),
        "navigationitem",
        ["is_deleted"],
        unique=False,
    )
    op.create_index(
        op.f("ix_navigationitem_slug"), "navigationitem", ["slug"], unique=True
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_navigationitem_slug"), table_name="navigationitem")
    op.drop_index(op.f("ix_navigationitem_is_deleted"), table_name="navigationitem")
    op.drop_column("navigationitem", "updated_at")
    op.drop_column("navigationitem", "created_at")
    op.drop_column("navigationitem", "deleted_at")
    op.drop_column("navigationitem", "is_deleted")
    op.drop_index(op.f("ix_navigation_slug"), table_name="navigation")
    op.drop_index(op.f("ix_navigation_is_deleted"), table_name="navigation")
    op.create_unique_constraint(
        "navigation_slug_key",
        "navigation",
        ["slug"],
        postgresql_nulls_not_distinct=False,
    )
    op.drop_column("navigation", "updated_at")
    op.drop_column("navigation", "created_at")
    op.drop_column("navigation", "deleted_at")
    op.drop_column("navigation", "is_deleted")
    # ### end Alembic commands ###
